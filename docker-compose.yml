version: "3.9"

services:
  app:
    build:
      dockerfile: ./app/Dockerfile
      context: .
      args:
        - DEV=true
    ports:
      - "8765:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_db && 
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./app/.env
#    environment:
#      - DB_HOST=${DB_HOST}
#      - DB_NAME=${DB_NAME}
#      - DB_USER=${DB_USER}
#      - DB_PASS=${DB_PASS}
#      - SECRET_KEY=${SECRET_KEY}
#      - DEBUG=${DEBUG}
#      - EMAIL_HOST=${EMAIL_HOST}
#      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
#      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
#      - EMAIL_PORT=${EMAIL_PORT}
#      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
#      - POSTGRES_DB=${POSTGRES_DB}
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db


  db:
    image: postgres:16
    ports:
      - "5234:5432"
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    env_file:
      - ./app/.env
#    environment:
##      - DB_HOST=${DB_HOST}
##      - DB_NAME=${DB_NAME}
##      - DB_USER=${DB_USER}
##      - DB_PASS=${DB_PASS}
##      - POSTGRES_DB=${POSTGRES_DB}
##      - POSTGRES_USER=${POSTGRES_USER}
##      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}


volumes:
  dev-db-data: